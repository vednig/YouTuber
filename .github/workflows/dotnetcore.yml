name: .NET Core

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
  release:
    tags:
      - v*

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Init
      env:
        PROJECT: YouTuber
        VERSION: 1.0.
      run: |
        echo "::set-env name=PROJECT::$PROJECT"
        echo "::set-env name=VERSION::$VERSION$GITHUB_RUN_NUMBER"
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - name: Build with dotnet
      run: dotnet build --configuration Release
    #- name: Run unit tests
    #  run: dotnet test --no-build --configuration Release
    #- name: dotnet publish
    #  run: dotnet publish -c Release -o dotnetcorewebapp
    
    - name: Generate EXE file
      run: |
        dotnet publish YouTuber.Console -r win-x86 -c Release -o ExePackages /p:PublishSingleFile=true /p:Version=${{ env.VERSION }}
        mv .\ExePackages\YouTuber.Console.exe .\ExePackages\YouTuber-Downloader.exe
        rm .\ExePackages\YouTuber.Console.pdb
    #- name: Release EXE file
    #  if: github.event.action == 'published'
    - name: Checkout code
      uses: actions/checkout@master
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: /ExePackages
        asset_name: YouTuber-Downloader
        tag: ${{ github.ref }}
        overwrite: true
    #- name: Create Release
    #  id: create_release
    #  uses: actions/create-release@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    tag_name: v${{ env.VERSION }}
    #    release_name: Release v${{ env.VERSION }}
    #    body: |
    #      YouTube Downloader v${{ env.VERSION }}
    #    draft: true
    #    prerelease: true
    - name: Generate coverage report
      run: |
        cd ./YouTuber.Test/
        dotnet test /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
    - name: Build NuGet Package
      run: dotnet pack ./YouTuber/YouTuber.csproj --configuration Release -o NuGetPackages /property:Version=${{ env.VERSION }}
    #- name: Deploy NuGet Package
    #  if: github.event.action == 'published'
    #  run: |
    #    echo Deploy version ${{ env.VERSION }}
    #    echo ./NuGetPackages/YouTuber.${{ env.VERSION }}.nupkg
    #    echo ${{ github.event.release.tag_name }}
    #    dotnet nuget push ./NuGetPackages/YouTuber.${{ env.VERSION }}.nupkg -k ${{ secrets.Nuget_api_key }} -s https://api.nuget.org/v3/index.json
    - name: Checkout code
      if: github.event.action == 'published'
      uses: actions/checkout@master